em portugues do brasil

precisamos reimplementar esse projeto. Como já dito, já tenho o projero  aplicação web MVC montado com as dependencias web, jpa, lombok, driver mysql. É necessário implementar o projeto com interfaces para fazer as 3 consultas nos referidos sites. 

o resultado deve ser inserido no meu banco localhost.

Implemente as classe completas, na íntegra, separadas de forma que adicione nos pacotes pertinents.

Lembre-se: códigos completos.

Orientações para você Chat:

1- A classes separadas e completas (todo o código desenvolvido)
2- A estrutura contêm : Model, Controllers, Services, Repository
3- A consulta vai enviar o CEP para a API e retornar o endereço. Tenho que colocar este retorno no meu banco em localhost para teste que estarei usando o MySQL no endereço http://localhost:8080/atividade03. Este retorno é o endereço que tenho que inserir no mei banco local.

A solicitação para executar o projeto:

Atividade 03
Última atualização:
Hoje at 7:31 pm
Utilize os princípios SOLID, DRY E KISS para criar uma API receba um código de CEP e salve o endereço em uma base de dados e imediatamente retorne o endereço salvo, crie uma API para listar endereços.

Banco de dados é opcional

A API deve consumir os serviços:

https://viacep.com.br/

https://brasilapi.com.br/

https://www.cepaberto.com/



O sistema deve ser parametrizável sobre qual api usar. Deve existir uma configuração que habilita multiplos providers como fallback:



Configurações:

Chave: app.cep.api
Valor: VIACEP, BRASILAPI, CEPABERTO
Função: Modifica qual api é usada pelo backend para buscar o cep

Chave: app.cep.fallback
Valor: true,false
Função:Se true ignora a config app.cep-api e usa todas em uma ordem predefinida

Chave: app.cep.fallback-order
Valor: VIACEP,CEPABERTO,BRASILAPI
Função: Modifica a ordem de precedencia entre as apis de consulta de CEP

Chave: app.cep.fallback-order[0]
Valor: VIACEP
Função:

Chave: app.cep.fallback-order[1]
Valor: CEPABERTO
Função:

Exemplo:

app.cep.fallback-order=VIACEP,CEPABERTO,BRASILAPI


@Value("${app.cep.fallback-order})"
private String fallBackOrder;


@Value("${app.cep.fallback-order})"
private List<String> fallBackOrder;

Ordem de precedência padrão para o consumo das API (app.cep.fallback=true)

VIACEP

CEPABERTO

BRASILAPI

Caso o CEP não seja localizado deve retornar 404 NOT FOUND

O backend deve ser feito em spring boot

Deve-se criar classes de Request e Response (DTO) para mapear o json da api externa

O sistema não deve depender diretamente da implementação externa.



Para consumo externo da API pode-se usar o HttpClient nativo do java ou o RestTemplate do spring boot.

Documentação de referencia:



https://spring.io/guides/gs/consuming-rest

Examplo:

Quote quote = restTemplate.getForObject(
					"http://localhost:8080/api/random", Quote.class);


Postman ➝ Spring boot ➝ ViaCEP ➝ Spring Boot ➝ Salva no Banco ➝ Postman



Dicas
Pode-se usar um factory method para pegar a implementação correta baseado na config. Factory Method (refactoring.guru)

Ou pode-se injetar todas as implementações no spring: Spring - Injecting Collections | Baeldung

-------------------------------

Está  vindo o resultado da consulta no Postman:



